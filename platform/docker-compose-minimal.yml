version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ventalocal-db
    environment:
      POSTGRES_USER: ventalocal
      POSTGRES_PASSWORD: ventalocal2024
      POSTGRES_DB: ventalocal
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ventalocal"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: ventalocal-redis
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO (S3-compatible storage)
  minio:
    image: minio/minio:latest
    container_name: ventalocal-storage
    ports:
      - "9000:9000"
      - "9002:9001"
    environment:
      MINIO_ROOT_USER: ventalocal
      MINIO_ROOT_PASSWORD: ventalocal2024
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # MeiliSearch (Search engine)
  meilisearch:
    image: getmeili/meilisearch:v1.5
    container_name: ventalocal-search
    ports:
      - "7700:7700"
    environment:
      MEILI_MASTER_KEY: ventalocal_master_key_2024
      MEILI_ENV: development
    volumes:
      - meilisearch_data:/meili_data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7700/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Gateway (only if directory exists)
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
      target: dev
      # Usar red del host durante el build mejora DNS/latencia a registry npm
      network: host
      args:
        # Permite forzar un mirror de npm si hace falta
        - NPM_REGISTRY=${NPM_REGISTRY:-https://registry.npmjs.org/}
    container_name: ventalocal-api
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://ventalocal:ventalocal2024@postgres:5432/ventalocal
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-jwt-secret-key-2024
      MP_ACCESS_TOKEN: test_token
      FRONTEND_URL: http://localhost:3001
      API_URL: http://localhost:3000
      MINIO_ENDPOINT: minio
      MINIO_PORT: 9000
      MINIO_ACCESS_KEY: ventalocal
      MINIO_SECRET_KEY: ventalocal2024
      MEILISEARCH_HOST: http://meilisearch:7700
      MEILISEARCH_KEY: ventalocal_master_key_2024
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
      meilisearch:
        condition: service_healthy
    volumes:
      - ./services/api-gateway:/app
      - /app/node_modules
    command: npm run dev

volumes:
  postgres_data:
  redis_data:
  minio_data:
  meilisearch_data:

networks:
  default:
    name: ventalocal-network
    driver: bridge
